#######################################################################
# PGE configuration for L3_DSWx_NI.
#######################################################################

# The runconfig section is intended to be used for dynamically generating the runconfig file used
# when running the OPERA PGEs. Any values set with a "__CHIMERA_VAL__" should be filled in by the input
# preprocessor. Otherwise, a precondition evaluation error will be raised by chimera.
#
# The runconfig section is also used as the data dict for the RunConfig jinja2 template.
# Accordingly, the schema here does NOT need to match the final RunConfig.yaml schema.
#
# * See RunConfig_schema.<label>.yaml for RunConfig.yaml documentation.
# * See related `RunConfig.yaml.<label>.jinja2.tmpl` file
#  and `util.conf_util.RunConfig.__init__()` for jinja2 usage.
runconfig:
  input_file_group:
    input_file_paths: __CHIMERA_VAL__
    input_mgrs_collection_id: __CHIMERA_VAL__
  dynamic_ancillary_file_group:
    dem_file:  __CHIMERA_VAL__
    hand_file: __CHIMERA_VAL__
    worldcover_file: __CHIMERA_VAL__
    reference_water_file: __CHIMERA_VAL__
  static_ancillary_file_group:
    mgrs_database_file: __CHIMERA_VAL__
    mgrs_collection_database_file: __CHIMERA_VAL__
  product_path_group:
    product_version: __CHIMERA_VAL__
    product_path: /home/dswx_user/output_dir
    scratch_path: /home/dswx_user/scratch_dir
  processing:
    algorithm_parameters: __CHIMERA_VAL__
  cnm_version: "__CHIMERA_VAL__"

# This lists all the precondition evaluation steps that this PGE needs to run prior to running the PGE.
preconditions:
  - get_product_version
  - get_cnm_version
  - set_daac_product_type
  - get_dswx_ni_sample_inputs
  - set_sample_product_metadata

# This lists all the postprocessor steps that this PGE will run after running the PGE.
postprocess:
  - update_product_accountability

set_sample_product_metadata:
  s3_bucket: "opera-dev-lts-fwd-collinss"
  s3_key: "sample_dswx_ni_product_metadata.json"

get_product_version:
  version_key: "DSWX_NI_PRODUCT_VERSION"

set_daac_product_type:
  template: OPERA_L3_DSWX_NI_{cnm_version}

# This function will add to the PGE output metadata when product to dataset conversion is performed
set_extra_pge_output_metadata:
   daac_product_type: daac_product_type

# List the extensions that the PGE generates
output_types:
  L3_DSWx_NI:
    - tif
    - png
    - catalog.json
    - iso.xml
    - log
    - qa.log

# The PGE name
# This must MATCH the corresponding entry in pge_outputs.yaml
pge_name: "L3_DSWx_NI"

# Set the primary input/output types here
primary_input: "L2_NISAR_GCOV"
primary_output: "L3_DSWx_NI"

# List the groups that Chimera will need to localize
# The entries MUST reference a property of `$.runconfig` of this YAML.
# The referenced properties MUST be maps.
localize_groups:
  - input_file_group
  - static_ancillary_file_group
  - processing


#######################################################################
# PGE Simulation Mode
#
# * See PGE_SIMULATION_MODE in settings.yaml and it's usage
# * See SIMULATE_OUTPUTS usage in opera_pge_wrapper.py and chimera.precondition_evaluator.py
#######################################################################
input_file_base_name_regexes:
    - '(?P<id>ALPSRP\d{9}_gcov)$'
sample_input_dataset_id: "ALPSRP271200660_gcov"
output_base_name: OPERA_L3_DSWx-NI_{tile_id}_{acquisition_ts}Z_{creation_ts}Z_{sensor}_{spacing}_v{product_version}
ancillary_base_name: OPERA_L3_DSWx-NI_{creation_ts}Z_{sensor}_{spacing}_v{product_version}
