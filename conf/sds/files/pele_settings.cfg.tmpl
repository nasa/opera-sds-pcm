# ElasticSearch URL
ES_ENGINE = "{{ GRQ_ES_ENGINE or 'elasticsearch' }}"
AWS_ES = {{ GRQ_AWS_ES or False }}

# ElasticSearch URL
{%- if GRQ_ES_FQDN.startswith('https://') %}
ES_EXTERNAL_URL = "{{ GRQ_ES_FQDN }}"
{%- else %}
ES_EXTERNAL_URL = "{{ 'https://'~GRQ_ES_FQDN if GRQ_AWS_ES == true or 'es.amazonaws.com' in GRQ_FQDN else 'http://'~GRQ_ES_FQDN~':9200' }}"
{%- endif %}

{%- if GRQ_ES_PVT_IP is iterable and GRQ_ES_PVT_IP is not string %}
ES_URL = [
    {%- for url in GRQ_ES_PVT_IP %}
        {%- if url.startswith('https://') %}
    "{{ url }}",
        {%- else %}
    "{{ 'https://'~url if GRQ_AWS_ES == true or 'es.amazonaws.com' in url else 'http://'~url~':9200' }}",
        {%- endif %}
    {%- endfor %}
]
{%- else %}
    {%- if GRQ_ES_PVT_IP.startswith('https://') %}
ES_URL = "{{ GRQ_ES_PVT_IP }}"
    {%- else %}
ES_URL = "{{ 'https://'~GRQ_ES_PVT_IP if GRQ_AWS_ES == true or 'es.amazonaws.com' in GRQ_ES_PVT_IP else 'http://'~GRQ_ES_PVT_IP~':9200' }}"
    {%- endif %}
{%- endif %}

# elastic search index to query
ES_INDEX = "grq"

#LDAP
LDAP_HOST = 'ldap.test.com'
LDAP_BASEDN = 'ou=personnel,dc=dir,dc=test,dc=com'
LDAP_GROUPS = {{ LDAP_GROUPS }}

# secret key
SECRET_KEY = 'testkey'

# ops account
OPS_USER = '{{ OPS_USER }}'
OPS_PASSWORD_HASH = '{{ OPS_PASSWORD_HASH }}'

# api token expiration time
TOKEN_EXPIRATION_SECS = 86400

# pele template vars
PELE_TITLE = "REST API for HySDS Datasets"
PELE_SUBTITLE = "PELE"
PELE_TITLE_BADGE = "BETA"
SHOW_BADGE = False

# disable sqlachemy modification tracking
SQLALCHEMY_TRACK_MODIFICATIONS = False

# disable field mask
RESTPLUS_MASK_SWAGGER = False

# rate limiter settings
RATELIMIT_ENABLED = True
RATELIMIT_STRATEGY = 'moving-window'
RATELIMIT_STORAGE_URL = 'memory://'
RATELIMIT_HEADERS_ENABLED = True

# mail settings
MAIL_DEFAULT_SENDER = "pele-api@jpl.nasa.gov"

# set default and max page size
DEFAULT_PAGE_SIZE = 10
MAX_PAGE_SIZE = 100
